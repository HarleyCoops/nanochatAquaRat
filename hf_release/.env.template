# nanochatAquaRat Environment Template
# Copy this file to .env and fill in actual values before running any scripts.

# -----------------------------------------------------------------------------
# Cloud GPU Providers
# -----------------------------------------------------------------------------

# Lambda Labs automation (scripts/launch_lambda_training.py, launch_lambda.py)
# https://cloud.lambdalabs.com/api-keys
LAMBDA_API_KEY=your-lambda-api-key-here

# Hyperbolic Labs automation (scripts/launch_hyperbolic_training.py)
# https://app.hyperbolic.ai/settings/api-keys
HYPERBOLIC_API_KEY=your-hyperbolic-api-key-here

# Optional Hyperbolic defaults (override with CLI args if needed)
# HYPERBOLIC_REGION=us-east
# HYPERBOLIC_MAX_PRICE=6.00

# -----------------------------------------------------------------------------
# Experiment Tracking (Weights & Biases)
# -----------------------------------------------------------------------------
# Get your key at https://wandb.ai/authorize
WANDB_API_KEY=your-wandb-api-key-here
WANDB_PROJECT=nanochat-aquarat
WANDB_ENTITY=your-wandb-username-or-team-name

# Optional run metadata
WANDB_RUN=aquarat-$(date +%Y%m%d-%H%M%S)
WANDB_MODE=online            # online | offline | disabled

# -----------------------------------------------------------------------------
# Google Cloud Storage Uploads (scripts/upload_to_gcs.sh)
# See GCS_UPLOAD_GUIDE.md for detailed instructions
# -----------------------------------------------------------------------------

# GCP project that owns your storage bucket
GCP_PROJECT_ID=your-gcp-project-id

# Default bucket for model artifacts (used by upload scripts and automation)
GCS_BUCKET=gs://your-model-bucket

# Service account credentials (recommended for automation). Point to the JSON
# key you download with `gcloud iam service-accounts keys create ...`
GOOGLE_APPLICATION_CREDENTIALS=/path/to/nanochat-gcs-key.json

# -----------------------------------------------------------------------------
# Optional cache/directories
# -----------------------------------------------------------------------------

# Override the default ~/.cache/nanochat location (used for checkpoints/data)
# NANOCHAT_BASE_DIR=/mnt/nanochat-cache

# If you pre-convert AQuA-RAT with scripts/prepare_aqua.py, set this so tasks
# and training scripts reuse the cached JSONL splits instead of downloading.
# AQUA_DATA_DIR=/mnt/datasets/aqua

